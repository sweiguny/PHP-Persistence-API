TestCase;Type;Description;MySQL;Postgres
testSelectAll;select;Tests a simple Select Statement;SELECT * FROM `addr_country` AS c;SELECT * FROM "addr_country" AS c;
testSelectAllWithAsteriskWildcard;select;Tests a simple Select Statement;SELECT * FROM `addr_country` AS c;SELECT * FROM "addr_country" AS c;
testSelectWithAggregateFunctions;select;Tests a simple Select Statement;SELECT COUNT(*), MAX(`id`) FROM `addr_country` AS c;SELECT COUNT(*), MAX("id") FROM "addr_country" AS c;
testJoinClause;select;Tests a join with an on-clause;SELECT * FROM `addr_country` AS c JOIN `addr_state` AS s;SELECT * FROM "addr_country" AS c JOIN "addr_state" AS s;
testSimpleJoinOnClause;select;Tests a simple inner join select with on-clause;SELECT * FROM `addr_country` AS c JOIN `addr_state` AS s ON c.`id` = s.`country` AND :name = 10;SELECT * FROM "addr_country" AS c JOIN "addr_state" AS s ON c."id" = s."country" AND :name = 10;
testOnClauseWithGroup;select;Tests an inner join select with a complex on-clause;SELECT * FROM `addr_country` AS c JOIN `addr_state` AS s ON c.`id` = s.`country` AND ( s.`id` > 100 AND s.`id` < 1000 ) OR ( s.`id` BETWEEN 1 AND 10 AND s.`id` BETWEEN 0 AND 100 );SELECT * FROM "addr_country" AS c JOIN "addr_state" AS s ON c."id" = s."country" AND ( s."id" > 100 AND s."id" < 1000 ) OR ( s."id" BETWEEN 1 AND 10 AND s."id" BETWEEN 0 AND 100 );
testSimpleWhereClause;select;Tests a select statement with a simple where-clause;SELECT * FROM `addr_country` WHERE `id` = `name`;SELECT * FROM "addr_country" WHERE "id" = "name";
testComplexWhereClause;select;Tests a select statement with a complex where-clause;SELECT * FROM `addr_country` AS c WHERE c.`id` = 10 AND ( `name` = "Österreich" ) OR ( ? BETWEEN 1 AND 2 );SELECT * FROM "addr_country" AS c WHERE c."id" = 10 AND ( "name" = 'Österreich' ) OR ( ? BETWEEN 1 AND 2 );
testInClause;select;Tests a select statement with an in-clause;SELECT * FROM `addr_state` AS s WHERE s.`name` IN("Bayern", "Niedersachsen") AND `id` IN(SELECT DISTINCT `state` FROM `addr_district` WHERE `name` LIKE "%heim%");SELECT * FROM "addr_state" AS s WHERE s."name" IN('Bayern', 'Niedersachsen') AND "id" IN(SELECT DISTINCT "state" FROM "addr_district" WHERE "name" LIKE '%heim%');
testJoinWithGroupByAndAggregateFunctionAndHavingClause;select;Tests a select statement with a join and having;SELECT SUM(`zip_code`), `country` FROM `address` JOIN `addr_city` ON addr_city.`id` = address.`city` WHERE `country` IN(2, 5, 6) GROUP BY `country` HAVING COUNT(`city`) >= 3;SELECT SUM("zip_code"), "country" FROM "address" JOIN "addr_city" ON addr_city."id" = address."city" WHERE "country" IN(2, 5, 6) GROUP BY "country" HAVING COUNT("city") >= 3;
testUpdateWithWhereClause;update;Simple update statement with a single where clause;UPDATE `addr_city` SET `name` = ?, `zip_code` = ? WHERE `id` = 1;UPDATE "addr_city" SET "name" = ?, "zip_code" = ? WHERE "id" = 1;
testDeleteWithWhereClause;delete;Simple delete statement with a single where clause;DELETE FROM `addr_city` WHERE `id` = 1;DELETE FROM "addr_city" WHERE "id" = 1;
testInsertWithSetClause;insert;Simple insert statement with set clause;INSERT INTO `addr_city` SET `id` = 1, `name` = "Simon Weiguny", `zip_code` = 1337;INSERT INTO "addr_city" SET "id" = 1, "name" = 'Simon Weiguny', "zip_code" = 1337;
testInsertWithValues;insert;Simple insert statement with values clause;INSERT INTO `address` VALUES(NULL, 1, 18358, 50, "66a, Salmesmühle");INSERT INTO "address" VALUES(NULL, 1, 18358, 50, '66a, Salmesmühle');
testInsertWithQuery;insert;Insert statement with subquery for inserting data;INSERT INTO `address` SELECT * FROM `address` WHERE `id` = 80;INSERT INTO "address" SELECT * FROM "address" WHERE "id" = 80;